Answer the following questions:


1.) What is an instance variable?

    variables declared outside of methods that are available to all objects within the class. each object gets its own
    copy of each instance variable if it calls for it

2.) How do you create an object of a class Vehicle?

    Vehicle car = new Vehicle();


3.) What is a reference variable? How is it different from a primitive type?

    it is a variable that refers to another class. It is an object and can contain many primitive types


4.) What does it mean to pass by reference?



5.) What makes up a method signature?

    Modifier modifier returnValueType methodName(parameters){}

6.) Write a method signature for a method divide() that takes two ints as parameters and returns a double.

    public static double divide(int a, int b){

        return ((double) a + b);

    }

7.) When does a method stop executing? How can you make it terminate?

8.) How do you return a String from a method?

    tell the method that it should return a string, i.e. "public static STRING methodName(string ayyyy){ return ayyyy;" }

9.) What is the return type of a method that does not returns any value?

10.) When should a method be static?

11.) What is an example of a time you would make an instance variable static? final?

12.) When a method returns a value, what needs to be done with that value?

13.) What is method overloading?

14.) Demonstrate method overloading by writing the method signature of two overloaded methods.

14.) What are constructors used for?

15.) If a class does not have a constructor, how does Java handle the creation of an object?

    Java creates a blank constructor for it. k

16.) What does a constructor that takes in two variable, make and model, for a class Vehicle look like?

17.) What is the "this" keyword used for?

18.) What are the keywords public, private, protected used for in a class declaration? A method declaration? Variable declaration?

19.) What is constructor overloading?

20.) Demonstrate constructor overloading with three overloaded constructors.

